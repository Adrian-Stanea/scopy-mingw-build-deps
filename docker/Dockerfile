# select as base image matching your host to get process isolation
FROM mcr.microsoft.com/windows/servercore:ltsc2019

SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]
# this creates an empty file named recycle.bin which essentialy disables the recycle bin
# this hack is needed because msys seems to create some files with wierd names in recycle bin
# that freeze the docker layer when commiting
# dirty hack 
RUN echo . > 'C:\$RECYCLE.BIN';  

# Install msys2 and innosetup
RUN [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \
    Invoke-WebRequest -UseBasicParsing -uri "https://github.com/msys2/msys2-installer/releases/download/2023-01-27/msys2-base-x86_64-20230127.sfx.exe" -OutFile msys2.exe; \
    .\msys2.exe -y -oC:\\; \
    Remove-Item msys2.exe; \
    Invoke-WebRequest -UseBasicParsing -uri "https://files.jrsoftware.org/is/6/innosetup-6.2.2.exe" -OutFile innosetup-6.2.2.exe; \
    .\innosetup-6.2.2.exe /VERYSILENT /SP- /SUPPRESSMSGBOXES /NORESTART /NOCANCEL /LOG=C:\iss.log /DIR=C:\innosetup;

RUN 'mkdir C:/msys64/home/docker/ && cd C:/msys64/home/docker/'

SHELL ["cmd", "/S", "/C"]
# set envvars PATH HOME CHERE_INVOKING MSYS_SYSTEM - https://www.msys2.org/docs/ci/#other-systems
RUN setx PATH C:\msys64\bin;C:\msys64\mingw64\bin;C:\msys64\usr\bin;%PATH% & \
    setx HOME C:\msys64\home\docker & \
    setx CHERE_INVOKING yes & \
    setx MSYSTEM MINGW64 

WORKDIR C:\\msys64\\home\\docker

RUN C:\msys64\usr\bin\bash.exe -lc " "
SHELL ["cmd", "/S", "/C"]

RUN function msys() { C:\msys64\usr\bin\bash.exe @('-lc') + @Args; } \
    msys "pacman --noconfirm -Syyu" \ 
    msys "pacman --noconfirm -Sy msys2-keyring" \ 
    msys "pacman --noconfirm -Su" \ 
    msys "pacman --noconfirm -Syuu" \ 
    msys "pacman --noconfirm -Syuu" \
    msys "pacman --noconfirm -Scc";

# install general packages needed to run build scripts
RUN function msys() { C:\msys64\usr\bin\bash.exe @('-c') + @Args; } \
    msys "pacman --noconfirm --needed -Sy git" \
    msys "git clone https://github.com/Adrian-Stanea/scopy-mingw-build-deps.git --branch Scopy-1.5.0";

# install packages and build scopy-deps
ARG BUILD_TARGET=x86_64 
ENV BUILD_TARGET=$BUILD_TARGET
RUN echo %BUILD_TARGET%

# exit 0 is required because init_staging force terminates the msys process resulting in an error - it is not an error
RUN C:\msys64\usr\bin\bash.exe -c "cd /home/docker/scopy-mingw-build-deps && ls && echo Building for $BUILD_TARGET && ./init_staging.sh $BUILD_TARGET" & exit 0 
RUN C:\msys64\usr\bin\bash.exe -c "cd /home/docker/scopy-mingw-build-deps && source build.sh $BUILD_TARGET && install_tools && install_deps && recurse_submodules"
RUN C:\msys64\usr\bin\bash.exe -c "cd /home/docker/scopy-mingw-build-deps && source build.sh $BUILD_TARGET && build_deps"
# clone scopy

# build scopy



